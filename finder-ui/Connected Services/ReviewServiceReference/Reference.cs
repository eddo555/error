//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace finder_ui.ReviewServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewData", Namespace="http://schemas.datacontract.org/2004/07/WcfReview")]
    [System.SerializableAttribute()]
    public partial class ReviewData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AboutUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AboutUserId {
            get {
                return this.AboutUserIdField;
            }
            set {
                if ((this.AboutUserIdField.Equals(value) != true)) {
                    this.AboutUserIdField = value;
                    this.RaisePropertyChanged("AboutUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ByUserId {
            get {
                return this.ByUserIdField;
            }
            set {
                if ((this.ByUserIdField.Equals(value) != true)) {
                    this.ByUserIdField = value;
                    this.RaisePropertyChanged("ByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reviews", Namespace="http://schemas.datacontract.org/2004/07/WcfReview")]
    [System.SerializableAttribute()]
    public partial class Reviews : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AboutUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ByUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AboutUserId {
            get {
                return this.AboutUserIdField;
            }
            set {
                if ((this.AboutUserIdField.Equals(value) != true)) {
                    this.AboutUserIdField = value;
                    this.RaisePropertyChanged("AboutUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ByUserId {
            get {
                return this.ByUserIdField;
            }
            set {
                if ((this.ByUserIdField.Equals(value) != true)) {
                    this.ByUserIdField = value;
                    this.RaisePropertyChanged("ByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReviewServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUnhandledReviews", ReplyAction="http://tempuri.org/IService1/GetUnhandledReviewsResponse")]
        finder_ui.ReviewServiceReference.ReviewData[] GetUnhandledReviews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUnhandledReviews", ReplyAction="http://tempuri.org/IService1/GetUnhandledReviewsResponse")]
        System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetUnhandledReviewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApproveReview", ReplyAction="http://tempuri.org/IService1/ApproveReviewResponse")]
        void ApproveReview(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApproveReview", ReplyAction="http://tempuri.org/IService1/ApproveReviewResponse")]
        System.Threading.Tasks.Task ApproveReviewAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DenyReview", ReplyAction="http://tempuri.org/IService1/DenyReviewResponse")]
        void DenyReview(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DenyReview", ReplyAction="http://tempuri.org/IService1/DenyReviewResponse")]
        System.Threading.Tasks.Task DenyReviewAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewsByServiceId", ReplyAction="http://tempuri.org/IService1/GetReviewsByServiceIdResponse")]
        finder_ui.ReviewServiceReference.ReviewData[] GetReviewsByServiceId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewsByServiceId", ReplyAction="http://tempuri.org/IService1/GetReviewsByServiceIdResponse")]
        System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetReviewsByServiceIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewsByAboutUserId", ReplyAction="http://tempuri.org/IService1/GetReviewsByAboutUserIdResponse")]
        finder_ui.ReviewServiceReference.ReviewData[] GetReviewsByAboutUserId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewsByAboutUserId", ReplyAction="http://tempuri.org/IService1/GetReviewsByAboutUserIdResponse")]
        System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetReviewsByAboutUserIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewsByUserId", ReplyAction="http://tempuri.org/IService1/GetReviewsByUserIdResponse")]
        finder_ui.ReviewServiceReference.ReviewData[] GetReviewsByUserId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetReviewsByUserId", ReplyAction="http://tempuri.org/IService1/GetReviewsByUserIdResponse")]
        System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetReviewsByUserIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveReview", ReplyAction="http://tempuri.org/IService1/SaveReviewResponse")]
        void SaveReview(finder_ui.ReviewServiceReference.Reviews recension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveReview", ReplyAction="http://tempuri.org/IService1/SaveReviewResponse")]
        System.Threading.Tasks.Task SaveReviewAsync(finder_ui.ReviewServiceReference.Reviews recension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsAlive", ReplyAction="http://tempuri.org/IService1/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsAlive", ReplyAction="http://tempuri.org/IService1/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : finder_ui.ReviewServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<finder_ui.ReviewServiceReference.IService1>, finder_ui.ReviewServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public finder_ui.ReviewServiceReference.ReviewData[] GetUnhandledReviews() {
            return base.Channel.GetUnhandledReviews();
        }
        
        public System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetUnhandledReviewsAsync() {
            return base.Channel.GetUnhandledReviewsAsync();
        }
        
        public void ApproveReview(int Id) {
            base.Channel.ApproveReview(Id);
        }
        
        public System.Threading.Tasks.Task ApproveReviewAsync(int Id) {
            return base.Channel.ApproveReviewAsync(Id);
        }
        
        public void DenyReview(int Id) {
            base.Channel.DenyReview(Id);
        }
        
        public System.Threading.Tasks.Task DenyReviewAsync(int Id) {
            return base.Channel.DenyReviewAsync(Id);
        }
        
        public finder_ui.ReviewServiceReference.ReviewData[] GetReviewsByServiceId(int Id) {
            return base.Channel.GetReviewsByServiceId(Id);
        }
        
        public System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetReviewsByServiceIdAsync(int Id) {
            return base.Channel.GetReviewsByServiceIdAsync(Id);
        }
        
        public finder_ui.ReviewServiceReference.ReviewData[] GetReviewsByAboutUserId(int Id) {
            return base.Channel.GetReviewsByAboutUserId(Id);
        }
        
        public System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetReviewsByAboutUserIdAsync(int Id) {
            return base.Channel.GetReviewsByAboutUserIdAsync(Id);
        }
        
        public finder_ui.ReviewServiceReference.ReviewData[] GetReviewsByUserId(int Id) {
            return base.Channel.GetReviewsByUserId(Id);
        }
        
        public System.Threading.Tasks.Task<finder_ui.ReviewServiceReference.ReviewData[]> GetReviewsByUserIdAsync(int Id) {
            return base.Channel.GetReviewsByUserIdAsync(Id);
        }
        
        public void SaveReview(finder_ui.ReviewServiceReference.Reviews recension) {
            base.Channel.SaveReview(recension);
        }
        
        public System.Threading.Tasks.Task SaveReviewAsync(finder_ui.ReviewServiceReference.Reviews recension) {
            return base.Channel.SaveReviewAsync(recension);
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
    }
}
